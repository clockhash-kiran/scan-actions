name: 'Mid Phase'
description: 'Triggers a zap and nikto scan via API and fails on critical findings.'

inputs:
  target_url:
    description: 'Target GitHub repository or deployed URL'
    required: true
  user_id:
    description: 'User ID for the scan request'
    required: true
  project_id:
    description: 'Project ID for the scan request'
    required: true
  api_url:
    description: 'API URL to trigger the scan'
    required: true
  api_token:
    description: 'Bearer token for authorization'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Trigger Scans
      shell: bash
      run: |
        echo "üöÄ Triggering scans..."

        # Prepare request payload
        REQUEST_PAYLOAD=$(cat <<EOF
{
  "target_url": "${{ inputs.target_url }}",
  "user_id": "${{ inputs.user_id }}",
  "project_id": "${{ inputs.project_id }}"
}
EOF
)

        # Send POST request
        RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "${{ inputs.api_url }}" \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ inputs.api_token }}" \
          -d "$REQUEST_PAYLOAD")

        # Extract HTTP status code (last line)
        STATUS_CODE=$(echo "$RESPONSE" | tail -n1)

        # Extract response body (all except last line)
        BODY=$(echo "$RESPONSE" | sed '$d')

        echo "üîç Response body:"
        echo "$BODY"
        echo "üî¢ HTTP Status: $STATUS_CODE"

        # Validate JSON
        if ! echo "$BODY" | jq . > /dev/null 2>&1; then
          echo "‚ùå ERROR: Invalid JSON response:"
          echo "$BODY"
          exit 1
        fi

        # Parse values
        STATUS=$(echo "$BODY" | jq -r '.status // empty')
        MESSAGE=$(echo "$BODY" | jq -r '.message // empty')
        REPORT_URL=$(echo "$BODY" | jq -r '.report_url // empty')

        echo "‚ÑπÔ∏è Status: $STATUS"
        echo "‚ÑπÔ∏è Message: $MESSAGE"
        echo "üìÑ Report: $REPORT_URL"

        # Fail the job if scan failed or HTTP error
        if [ "$STATUS_CODE" = "422" ] || [ "$STATUS" = "FAILED" ] || [ "$STATUS" = "ERROR" ]; then
          echo "‚ùå Scan failed. See report: $REPORT_URL"
          exit 1
        fi

        echo "‚úÖ Scan completed successfully. Report: $REPORT_URL"
