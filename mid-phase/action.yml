name: "Trivy Scan Phase"
description: "Triggers Trivy scan via API and fails on critical/high findings"

inputs:
  target_url:
    required: true
  user_id:
    required: true
  project_id:
    required: true
  api_url:
    required: true

runs:
  using: "composite"
  steps:
    - name: Trigger Trivy Scan
      shell: bash
      run: |
        echo "üöÄ Triggering Trivy scan..."

        RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "${{ inputs.api_url }}" \
          -H "Content-Type: application/json" \
          -d '{
                "target_url": "${{ inputs.target_url }}",
                "user_id": "${{ inputs.user_id }}",
                "project_id": "${{ inputs.project_id }}"
              }')

        BODY=$(echo "$RESPONSE" | head -n1)
        CODE=$(echo "$RESPONSE" | tail -n1)

        echo "üßæ Response Body: $BODY"
        echo "üî¢ Status Code: $CODE"

        # Parse "status" field from JSON response
        STATUS=$(echo "$BODY" | grep -o '"status": *"[^"]*"' | cut -d':' -f2 | tr -d ' "')

        # Optionally extract and display report URL
        REPORT_URL=$(echo "$BODY" | grep -o '"report_url": *"[^"]*"' | cut -d':' -f2- | tr -d ' "')

        echo "üìÑ Report URL: $REPORT_URL"

        if [ "$STATUS" = "FAILED" ] || [ "$STATUS" = "ERROR" ]; then
          echo "‚ùå Scan failed (status: $STATUS)"
          echo "üîó Report: $REPORT_URL"
          exit 1
        fi

        echo "‚úÖ Scan completed successfully"
