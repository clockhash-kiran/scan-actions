name: 'Mid Phase - Trivy Scan'
description: 'Triggers a Trivy scan via API and fails on critical findings.'
inputs:
  target_url:
    description: 'Target GitHub repository or deployed URL'
    required: true
  user_id:
    description: 'User ID for the scan request'
    required: true
  project_id:
    description: 'Project ID for the scan request'
    required: true
  api_url:
    description: 'API URL to trigger the scan'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Trigger Trivy scan
      shell: bash
      run: |
        echo "üöÄ Triggering Trivy scan..."

        RESPONSE=$(curl -s -w "%{http_code}" -X POST "${{ inputs.api_url }}" \
          -H "Content-Type: application/json" \
          -d '{
                "target_url": "${{ inputs.target_url }}",
                "user_id": "${{ inputs.user_id }}",
                "project_id": "${{ inputs.project_id }}"
              }')

        # Extract body and HTTP code
        BODY=$(echo "$RESPONSE" | head -c -3)
        STATUS_CODE=$(echo "$RESPONSE" | tail -c 4)

        # Extract fields
        STATUS=$(echo "$BODY" | grep -o '"status": *"[^"]*"' | cut -d':' -f2 | tr -d ' "')
        MESSAGE=$(echo "$BODY" | grep -o '"message": *"[^"]*"' | cut -d':' -f2- | tr -d ' "')
        REPORT_URL=$(echo "$BODY" | grep -o '"report_url": *"[^"]*"' | cut -d':' -f2- | tr -d ' "')

        echo "üßæ Status: $STATUS"
        echo "üìù Message: $MESSAGE"
        echo "üîó Report URL: $REPORT_URL"
        echo "üî¢ HTTP Status Code: $STATUS_CODE"

        # Fail the job if 422 or other error
        if [ "$STATUS_CODE" = "422" ] || [ "$STATUS" = "FAILED" ] || [ "$STATUS" = "ERROR" ]; then
          echo "‚ùå Scan failed. See report: $REPORT_URL"
          exit 1
        fi

        echo "‚úÖ Scan completed successfully. Report: $REPORT_URL"
