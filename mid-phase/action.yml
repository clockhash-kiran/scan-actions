name: 'Mid Phase'
description: 'Triggers a Trivy scan via API and fails on critical findings.'

inputs:
  target_url:
    description: 'Target GitHub repository or deployed URL'
    required: true
  user_id:
    description: 'User ID for the scan request'
    required: true
  project_id:
    description: 'Project ID for the scan request'
    required: true
  api_url:
    description: 'API URL to trigger the scan'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Trigger Trivy scan
      shell: bash
      run: |
        echo "üöÄ Triggering scans..."

        # Send POST request and get response body + HTTP code separated by newline
        RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "${{ inputs.api_url }}" \
          -H "Content-Type: application/json" \
          -d '{
                "target_url": "${{ inputs.target_url }}",
                "user_id": "${{ inputs.user_id }}",
                "project_id": "${{ inputs.project_id }}"
              }')

        # Extract HTTP status code (last line)
        STATUS_CODE=$(echo "$RESPONSE" | tail -n1)

        # Extract response body (all except last line)
        BODY=$(echo "$RESPONSE" | sed '$d')

        # Parse JSON fields safely using jq
        STATUS=$(echo "$BODY" | jq -r '.status // empty')
        MESSAGE=$(echo "$BODY" | jq -r '.message // empty')
        REPORT_URL=$(echo "$BODY" | jq -r '.report_url // empty')


        # Fail the job if scan failed or HTTP code indicates failure
        if [ "$STATUS_CODE" = "422" ] || [ "$STATUS" = "FAILED" ] || [ "$STATUS" = "ERROR" ]; then
          echo "‚ùå Scan failed. See report: $REPORT_URL"
          exit 1
        fi

        echo "‚úÖ Scan completed successfully. Report: $REPORT_URL"
