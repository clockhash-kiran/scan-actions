name: 'Post Phase'
description: 'Triggers a zap and nikto scan via API and fails on critical findings.'

inputs:
  target_url:
    description: 'Target GitHub repository or deployed URL'
    required: true
  user_id:
    description: 'User ID for the scan request'
    required: true
  project_id:
    description: 'Project ID for the scan request'
    required: true
  api_token:
    description: 'Bearer token for authorization'
    required: true
  pat:
    description: 'Optional GitHub PAT for private repo access'
    required: false

runs:
  using: 'composite'
  steps:
    - name: Trigger Scans
      shell: bash
      run: |
        echo "üöÄ Triggering scans..."

        # Dynamically build JSON payload with optional PAT
        JSON_PAYLOAD=$(jq -n \
          --arg url "${{ inputs.target_url }}" \
          --arg uid "${{ inputs.user_id }}" \
          --arg pid "${{ inputs.project_id }}" \
          --arg pat "${{ inputs.pat }}" \
          '{
            target_url: $url,
            user_id: $uid,
            project_id: $pid
          } + ( $pat | select(length > 0) | { pat_token: . })')

        echo "üì¶ JSON Payload:"
        echo "$JSON_PAYLOAD"

        RESPONSE=$(curl -s -w "\n%{http_code}" -X POST "https://5288-122-165-243-208.ngrok-free.app/scan/post-request" \
          -H "Content-Type: application/json" \
          -H "Authorization: Bearer ${{ inputs.api_token }}" \
          -d "$JSON_PAYLOAD")

        STATUS_CODE=$(echo "$RESPONSE" | tail -n1)
        BODY=$(echo "$RESPONSE" | sed '$d')

        STATUS=$(echo "$BODY" | jq -r '.status // empty')
        MESSAGE=$(echo "$BODY" | jq -r '.message // empty')
        REPORT_URL=$(echo "$BODY" | jq -r '.report_url // empty')

        echo "‚ÑπÔ∏è Status: $STATUS"
        echo "‚ÑπÔ∏è Message: $MESSAGE"

        if [ "$STATUS_CODE" = "422" ] || [ "$STATUS" = "FAILED" ] || [ "$STATUS" = "ERROR" ]; then
          echo "‚ùå Scan failed. See report: $REPORT_URL"
          exit 1
        fi

        echo "‚úÖ Scan completed successfully. Report: $REPORT_URL"
